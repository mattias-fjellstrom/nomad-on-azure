[working-directory: 'infrastructure/platform']
platform-apply:
  #!/bin/bash
  set -euo pipefail
  terraform init
  terraform apply -auto-approve

[working-directory: 'infrastructure/platform']
platform-destroy:
  #!/bin/bash
  set -euo pipefail
  terraform init
  terraform destroy -auto-approve

[working-directory: 'infrastructure/consul/servers']
consul-apply: platform-apply
  #!/bin/bash
  set -euo pipefail
  terraform init
  terraform apply -auto-approve

[working-directory: 'infrastructure/consul/servers']
consul-destroy:
  #!/bin/bash
  set -euo pipefail
  terraform init
  terraform destroy -auto-approve

[working-directory: 'infrastructure/nomad/servers']
nomad-servers-apply: platform-apply consul-apply
  #!/bin/bash
  set -euo pipefail
  terraform init
  terraform apply -auto-approve

[working-directory: 'infrastructure/nomad/servers']
nomad-servers-destroy:
  #!/bin/bash
  set -euo pipefail
  terraform init
  terraform destroy -auto-approve

[working-directory: 'infrastructure/nomad/servers']
nomad-servers-output:
  #!/bin/bash
  set -euo pipefail
  terraform output -raw nomad_environment_variables

[working-directory: 'infrastructure/nomad/clients']
nomad-clients-apply: platform-apply consul-apply nomad-servers-apply
  #!/bin/bash
  set -euo pipefail
  terraform init
  terraform apply -auto-approve

[working-directory: 'infrastructure/nomad/clients']
nomad-clients-destroy:
  #!/bin/bash
  set -euo pipefail
  terraform init
  terraform destroy -auto-approve

destroy:
  just nomad-clients-destroy
  just nomad-servers-destroy
  just consul-destroy
  just platform-destroy

connect-to-nomad-servers:
  #!/bin/bash
  pip=$(az network public-ip show \
    --name pip-nomad-servers-lb \
    --resource-group rg-nomad-servers-on-azure \
    --query "ipAddress" \
    --output tsv)
  ssh -i infrastructure/nomad/servers/ssh_keys/servers.pem -p 2222 azureuser@$pip

connect-to-nomad-clients:
  #!/bin/bash
  NIC_ID=$(az network nic list \
    --resource-group rg-nomad-clients-on-azure \
    --query '[0].ipConfigurations[0].publicIPAddress.id' \
    -o tsv)
  PUBLIC_IP=$(az network public-ip show --ids $NIC_ID --query 'ipAddress' -o tsv)
  ssh -i infrastructure/nomad/clients/ssh_keys/servers.pem azureuser@$PUBLIC_IP

connect-to-consul-servers:
  #!/bin/bash
  pip=$(az network public-ip show \
    --name pip-consul-servers-lb \
    --resource-group rg-consul-on-azure \
    --query "ipAddress" \
    --output tsv)
  ssh -i infrastructure/consul/servers/ssh_keys/servers.pem -p 2223 azureuser@$pip

[working-directory: 'infrastructure/consul/tls']
generate-consul-tls domain:
  #!/bin/bash

  domain={{ domain }}

  consul tls ca create \
    -name-constraint="true" \
    -additional-name-constraint "$domain"

  # three server certificates
  consul tls cert create -server -dc dc1 -additional-dnsname "$domain"
  consul tls cert create -server -dc dc1 -additional-dnsname "$domain"
  consul tls cert create -server -dc dc1 -additional-dnsname "$domain"

[working-directory: 'infrastructure/consul/gossip']
generate-consul-gossip-key:
  #!/bin/bash
  set -euo pipefail
  consul keygen > gossip.key